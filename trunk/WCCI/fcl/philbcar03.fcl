FUNCTION_BLOCK philbcar

//An attempt to repeat the PhilBController in linguistic terms

VAR_INPUT
	error : REAL; 	// Difference between heading and WP
END_VAR

VAR_OUTPUT
	steer : REAL; 	// Steering angle
	accel : REAL; 	// Car acceleration
END_VAR

//Error : [0, 180] - angle between heading and WP
//Need to understand how to get negative values
FUZZIFY error
	TERM HighHigh 	:= trape 6 18 170 180;					//>8
	TERM High 		:= trape 1 1.9 19 20;					// 4
	TERM HighLow 	:= trape 0.25 0.375 3.75 4;				// 2
	TERM MedHigh 	:= trape 0.125 0.1875 1.875 2; 			// 1
	TERM Med 		:= trape 0.0625 0.09375 0.9375 1;		// 0.5
	TERM MedLow 	:= trape 0.0312 0.04688 0.4688 0.5;		// 0.25
	TERM LowHigh 	:= trape 0.0156 0.02344 0.2344 0.25;	// 0.125
	TERM Low 		:= trape 0.0078 0.01172 0.1172 0.125;	// 0.0625
	TERM LowLow 	:= trape 0.000 0.00586 0.0586 0.0625;	// 0.0313
END_FUZZIFY

//Steer : [0,16]
DEFUZZIFY steer
	TERM HighHigh 	:= 8;//trian 8 16 24;				//16
	TERM High 		:= 6;//trian 3 6 9;					//6
	TERM HighLow 	:= 2;//trian 0.1 2 4;				//2
	TERM MedHigh 	:= 0.25;//trian 0.05 0.25 0.75;		//0.25
	TERM Med 		:= 0.10;//trian 0.05 0.1 0.15;			//0.1
	TERM MedLow 	:= 0.05;//trian 0.025 0.05 0.075;		//0.05
	TERM LowHigh 	:= 0.01;//trian 0.005 0.01 0.03;		//0.01
	TERM Low 		:= 0.005;//trian 0.0025 0.005 0.0075;	//0.005
	TERM LowLow 	:= 0.001;//trian 0 0.001 0.003;			//0.001
	ACCU : MAX;
	METHOD : COGF;
	DEFAULT := 0;
	
END_DEFUZZIFY

//Acceleration : [0, 0.01]
//currently operates at maximum acceleration

DEFUZZIFY accel
	TERM HighHigh 	:= 0.01;
	ACCU : MAX;
	METHOD : COGF;
	DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;
	ACT : MIN;
	//Driving rules
	AND : MIN;
	ACT : MIN;
	//Driving rules
	RULE 1 : IF error IS HighHigh THEN steer IS HighHigh, accel IS HighHigh;
	RULE 2 : IF error IS High THEN steer IS High, accel IS HighHigh;
	RULE 3 : IF error IS HighLow THEN steer IS HighLow, accel IS HighHigh;
	RULE 4 : IF error IS MedHigh THEN steer IS MedHigh, accel IS HighHigh;
	RULE 5 : IF error IS Med THEN steer IS Med, accel IS HighHigh;
	RULE 6 : IF error IS MedLow THEN steer IS MedLow, accel IS HighHigh;
	RULE 7 : IF error IS LowHigh THEN steer IS LowHigh, accel IS HighHigh;
	RULE 8 : IF error IS Low THEN steer IS Low, accel IS HighHigh;
	RULE 9 : IF error IS LowLow THEN steer IS LowLow, accel IS HighHigh;
END_RULEBLOCK

END_FUNCTION_BLOCK


